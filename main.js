!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n(require("react"),require("react-dom")):"function"==typeof define&&define.amd?define(["react","react-dom"],n):"object"==typeof exports?exports.xgCompilerWeb=n(require("react"),require("react-dom")):t.xgCompilerWeb=n(t.react,t["react-dom"])}(this,(function(__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__4__){return function(t){var n={};function e(l){if(n[l])return n[l].exports;var c=n[l]={i:l,l:!1,exports:{}};return t[l].call(c.exports,c,c.exports,e),c.l=!0,c.exports}return e.m=t,e.c=n,e.d=function(t,n,l){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:l})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var l=Object.create(null);if(e.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var c in t)e.d(l,c,function(n){return t[n]}.bind(null,c));return l},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=8)}([function(module,exports,__webpack_require__){eval("var api = __webpack_require__(5);\n            var content = __webpack_require__(6);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL3hnQ29tcGlsZXJXZWIvLi9zcmMvc2tpbi5sZXNzP2NhZTYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS02LTEhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc2tpbi5sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){eval('!function(t,n){if(true)module.exports=n();else { var o, e; }}(this,(function(){return function(t){var n={};function e(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(o,i,function(n){return t[n]}.bind(null,i));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([function(t,n,e){t.exports=function(t){var n={};function e(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(o,i,function(n){return t[n]}.bind(null,i));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([function(t,n,e){t.exports=function(t){var n={};function e(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(o,i,function(n){return t[n]}.bind(null,i));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";var o,i;function r(t,n){return t&&"object"==typeof t&&t._type==n}function u(){let t="abcdefhijkmnprstwxyz",n=t.length,e="";for(let o=0;o<6;o++)e+=t.charAt(Math.floor(Math.random()*n));return"u_"+e}e.r(n),e.d(n,"T_Scope",(function(){})),e.d(n,"compile",(function(){return O})),e.d(n,"createIO",(function(){return N})),e.d(n,"E_ItemType",(function(){return o})),e.d(n,"isTypeof",(function(){return r})),e.d(n,"UNDEFINED_FRAME_LABEL",(function(){return s})),function(t){t[t.FRAME=0]="FRAME",t[t.NODE=1]="NODE",t[t.PIN=2]="PIN",t[t.JOINT=3]="JOINT",t[t.CONNECTION=4]="CONNECTION"}(o||(o={})),function(t){t.each=function(t,...n){n.forEach(n=>{n&&n.forEach(t)})},t.find=function(t,...n){let e;return n.find(n=>{if(n)return e=n.find(n=>t(n))}),e}}(i||(i={}));const s="UNDEFINED_FRAME_LABEL";function c(t){let n=t;n._exe||(n._exe=function(e,i,u,s){if(!I())return;const c=t.finishPin.forkedFrom||t.finishPin;if("function"!=typeof c._exe){const e=r(t.startPin.parent,o.NODE)?t.startPin.parent:void 0;throw new Error(`连接(来自:${e?e.runtime.title:"未知组件"}，${n.title})已断开.`)}w.debug&&w.debug.stepTime,c._exe(e,i,u,s)})}let f;function p(t,n){const e=function t(n,e,o,i){let r={id:u(),instId:e,hostId:o,path:void 0,parent:n,returnParams:{},resolve:null,comInsts:{},applyScope(n,e,o,i){const u=t(r,n,o,i);let s=r.comInsts[n];return s&&(!s.scopes&&(s.scopes=[]),s.scopes.push(u)),d(n,o,u),u}};if(i)r.path=r.id;else{const t=[r.id];let n=r.parent;for(;n;)n.parent&&t.push(n.id),n=n.parent;r.path=t.reverse().join(":")}return r}(void 0,t,n);return d(t,n,e),e}function a(t,n){var e;return null===(e=f[t])||void 0===e?void 0:e[n]}function d(t,n,e){let o=f[t];o||(f[t]=o={}),o[n]=e}function l(t,n,e="runtime"){t.conAry&&t.conAry.forEach(t=>{c(t)}),t._exe=function(i,u,s,c){if(!I())return;b.execute&&b.execute(o.PIN,t.id,u);let f=i;if(!f)if(r(t.parent,o.NODE)){const n=t.parent.parent;f=a(!n._exeAsRoot_&&n.parent?n.parent.runtime.id:void 0,n.id)}else if(r(t.parent,o.FRAME)){const n=t.parent;f=a(!n._exeAsRoot_&&n.parent?n.parent.runtime.id:void 0,n.id)}let p=n.pin?n.pin(t):void 0;if(p&&!1===p.exe(u,c))return;const d=n=>{p&&p.exe(n,t,"返回"),"function"==typeof s&&s(n)};if("input"==t.direction)t.proxyPin&&t.proxyPin._exe?t.proxyPin.parent._exe(f,{[t.hostId]:u},void 0,t.direction):t.parent._exe(f,void 0,{[t.hostId]:u},d);else if("inner-input"===t.direction){if(!t.proxyPin||!t.proxyPin._exe)return;t.proxyPin._exe(f.parent,u,d,c)}else if("output"==t.direction||"inner-output"==t.direction)if(t.proxyPin&&t.proxyPin._exe)t.proxyPin._exe(i.parent,u,d,c);else{let n;"mock"===e&&t.mockData&&(n=t.mockData),t.conAry&&t.conAry.length>0&&t.conAry.forEach((e,o)=>{let i;d&&(void 0!==n?d(JSON.parse(t.mockData)):i=function(t){d(t)}),e._exe(f,u,i,t)})}}}function m(t,n,e="runtime"){i.each(t=>l(t,n,e),t.inputPins,t.inputPinExts,t.inputPinsInModel),i.each(t=>l(t,n,e),t.outputPins,t.inputPinExts,t.outputPinsInModel);const o=t,r=n.node(t),u={};o._exe=function(n,e,o,c){let f;i.each(t=>{void 0!==t.dummyData&&(!f&&(f={}),f[t.hostId]=t.dummyData)},t.inputPins,t.inputPinsInModel),o=f?Object.assign(f,o):o,u[n.id]||(function(n,e=s){if("function"!=typeof r.render)throw new Error("Render config function for node not found.");const o=n.path,i={};t.frames&&t.frames.forEach(t=>{i[t.id]=function(e,o=s){const i=t._exe(n,e,o);if(i)return i.path}});const u={inst:r.render(o,e,i,n),scopes:[]};n.comInsts[t.runtime.id]=u}(n,e),u[n.id]=!0);const p=n.comInsts[t.runtime.id];if(o)for(let t in o){const n=o[t];p.inst.inputs[t]=[n,c]}r.exe&&r.exe(p.inst,o,c)},t.frames&&t.frames.forEach(t=>{_(t,n)})}let h=new WeakMap;function y(t,n,e="runtime"){const o=t.parent.parent.runtime;t.from?c(t.from):console.warn(`组件(${o.title},${o.def.namespace})存在连接断开.`),t.to?c(t.to):console.warn(`组件(${o.title},${o.def.namespace})存在连接断开.`),t._exe=function(e,o,i){const r=n.joint?n.joint(t):void 0,u=t.parent.parent;if("input"==t.type){let n=e.comInsts[u.runtime.id].scopes.find(n=>n.hostId===t.parent.id);const s=n=>{r&&r.exe(o),t.to&&t.to._exe(n,o,i,t.type)};if(n){let t=n.hostId;n.parent.comInsts[u.runtime.id].scopes.forEach(n=>{n.hostId==t&&s(n)})}else{let n=h.get(t);n||h.set(t,n=new WeakMap);let o=n.get(e);o||n.set(e,o=[]),o.push(s)}}else r&&"function"==typeof r.exe&&r.exe(o),t.to&&t.to._exe(e.parent,o,i,t.type)}}function _(t,n,e="runtime"){t.comAry&&t.comAry.forEach(t=>{m(t,n,e)}),t.inputPins&&t.inputPins.forEach(t=>l(t,n,e)),t.outputPins&&t.outputPins.forEach(t=>l(t,n,e)),t.inputJoints&&t.inputJoints.forEach(t=>y(t,n,e)),t.outputJoints&&t.outputJoints.forEach(t=>y(t,n,e));const o=t,i={};o._update=function(o,r,u=s){const c=u+o.id,{curScope:f,coms:p}=i[c];t.comAry.forEach(t=>{p.push(t.runtime.id),"function"!=typeof t._exe&&(m(t,n,e),t._exe(f,u,void 0,void 0))})},o._exe=function(r,u,c=s,f,d){if(!r){if(t.parent){const n=a(t.parent?t.parent.runtime.id:t.id,t.id);n&&(r=n.parent)}r||(r=p(void 0,t.id+"-parent"))}const l=c+r.id;let y=!1;if(i[l]){const n=i[l].coms;(n.length!==t.comAry.length||t.comAry.find(t=>n.indexOf(t.runtime.id)<0))&&(y=!0)}if(!i[l]||y){let u,p;if(o._exeAsRoot_=!!d,c=void 0!==c?c:s,o._exeAsRoot_)u={inst:void 0,scopes:[]};else if(u=r.comInsts[t.parent.runtime.id],!u&&t._rootF)return;const a=[];"input"==(f="string"==typeof f?f:"input")&&(p=r.applyScope(!o._exeAsRoot_&&t.parent?t.parent.runtime.id:void 0,c,t.id,t._rootF),t.comAry.forEach(t=>{a.push(t.runtime.id),"function"!=typeof t._exe&&m(t,n,e),t._exe(p,c,void 0,void 0)})),i[l]={myInstScope:u,curScope:p,coms:a}}const{curScope:_}=i[l];if("input"==(f="string"==typeof f?f:"input")){const n={};if("mock"===e&&t.inputPins.length>0&&t.inputPins.forEach(t=>{t.mockData&&(n[t.hostId]=t.mockData)}),u=Object.assign(n,u))for(let n in u){const e=t.inputPins.find(t=>t.hostId==n);e?e._exe(_,u[n],void 0,void 0):"undefined"!=typeof console&&"function"==typeof console.error&&console.error(`No inputPin(id=${n}) found`)}return t.inputJoints&&t.inputJoints.forEach(t=>{!function(t,n){let e=n.parent,o=h.get(t);if(o){let t=o.get(e);t&&t.forEach(t=>{t(n)})}}(t,_)}),_}if(f.match(/^(output)|(inner-input)$/gi)){let n=_;if(t.outputPins.length){if(u)for(let t in u)n.returnParams[t]=u[t]||null;t.outputPins.find(t=>null==n.returnParams[t.hostId])||n.resolve()}}}}let x,P,v,g=null,E="stop";function I(){return"running"===E}let w={},b={};function O(t,n,e="runtime"){return function(t,n){if(!r(t,n))throw new Error("Invalid item type")}(t,o.FRAME),_(t,n,e),g={on(t,n){t&&"string"==typeof t&&"function"==typeof n&&(b[t.toLowerCase()]=n)},run(n=t,e){if("stop"===E&&(f={}),function(t){return Object.assign(w,t||{}),P=[],v=[],!0}(e))return function(){function t(t){try{t.exe&&t.exe()}catch(t){b.error?b.error(t):console.error(t)}n(x)}function n(e){if("stop"==E||e!==x)return;let o;"pause"==E&&setTimeout(n,1e3),v.length>0?o=v.shift():P.length>0&&(o=P.shift()),o?w.debug?setTimeout(()=>{t(o)},o.debugSleep):"number"==typeof o.sleep&&o.sleep>-1?setTimeout(()=>{t(o)},0):t(o):setTimeout(t=>n(e))}E="running",x=u(),n(x),new Promise((t,n)=>{})}(),t=>n._exe(void 0,t,void 0,"input",!0)},update:(n,e=t)=>(e._update(n,void 0,void 0),!0),pause:A,stop(){const t=(E="stop",!0);return g=null,P=void 0,v=void 0,f={},t}}}function A(){return E="pause",!0}function N(t,n){const e={_all:{},_waiting:{},set(t,n){this._all[t]=n;const e=this._waiting[t];if(e)try{e.forEach(t=>{n(t)}),delete this._waiting[t]}finally{}return!0},get(t){return this._all[t]},waiting(t,n){let e=this._waiting[t];e||(e=this._waiting[t]=[]),e.push(n)}},o=u(),r={};return{inputs:new Proxy({},{ownKeys(n){const e=[];return i.each(t=>{e.push(t.hostId)},t.inputPins,t.inputPinsInModel),e},getOwnPropertyDescriptor:t=>({enumerable:!0,configurable:!0}),get:(t,n,i)=>"__id__"===n?o:function(t){e.set(n,(function(e){const o=r[n];if(void 0!==e&&o){r[n]=void 0;const[o,i]=e;t(o,(function(t){"function"==typeof i&&i(t)}))}}))},set(t,o,i,u){r[o]=i;const s=e.get(o);return s?((null==n?void 0:n.input)&&n.input(),s(i)):e.waiting(o,i),!0}}),outputs:new Proxy({},{ownKeys(n){const e=[];return i.each(t=>{e.push(t.hostId)},t.outputPins,t.outputPinsInModel),e},getOwnPropertyDescriptor:t=>({enumerable:!0,configurable:!0}),get(e,r,u){if("__id__"===r)return o;let s;return function(e,o){if(t.outputPins){s=o;const u=function(t){"function"==typeof s&&s(t)},c=i.find(({hostId:t})=>r==t,t.outputPins,t.outputPinsInModel);if(!c)throw new Error(`No output(hostId=${r}) found.`);Promise.resolve().then(()=>{(null==n?void 0:n.output)&&n.output(e),c._exe(null,e,u,t)})}}}})}}}])},function(t,n,e){"use strict";var o,i;function r(t,n){return t&&"object"==typeof t&&t._type==n}function u(){let t="abcdefhijkmnprstwxyz",n=t.length,e="";for(let o=0;o<6;o++)e+=t.charAt(Math.floor(Math.random()*n));return"u_"+e}e.r(n),e.d(n,"T_Scope",(function(){})),e.d(n,"compile",(function(){return A})),e.d(n,"createIO",(function(){return M})),e.d(n,"E_ItemType",(function(){return o})),e.d(n,"isTypeof",(function(){return r})),e.d(n,"UNDEFINED_FRAME_LABEL",(function(){return s})),function(t){t[t.FRAME=0]="FRAME",t[t.NODE=1]="NODE",t[t.PIN=2]="PIN",t[t.JOINT=3]="JOINT",t[t.CONNECTION=4]="CONNECTION"}(o||(o={})),function(t){t.each=function(t,...n){n.forEach(n=>{n&&n.forEach(t)})},t.find=function(t,...n){let e;return n.find(n=>{if(n)return e=n.find(n=>t(n))}),e}}(i||(i={}));const s="UNDEFINED_FRAME_LABEL";var c=e(0);function f(t){let n=t;n._exe||(n._exe=function(e,i,r,u){if(!w())return;const s=t.finishPin.forkedFrom||t.finishPin;if("function"!=typeof s._exe){const e=Object(c.isTypeof)(t.startPin.parent,o.NODE)?t.startPin.parent:void 0;throw new Error(`连接(来自:${e?e.runtime.title:"未知组件"}，${n.title})已断开.`)}b.debug&&b.debug.stepTime,s._exe(e,i,r,u)})}let p;function a(t,n){const e=function t(n,e,o,i){let r={id:u(),instId:e,hostId:o,path:void 0,parent:n,returnParams:{},resolve:null,comInsts:{},applyScope(n,e,o,i){const u=t(r,n,o,i);let s=r.comInsts[n];return s&&(!s.scopes&&(s.scopes=[]),s.scopes.push(u)),l(n,o,u),u}};if(i)r.path=r.id;else{const t=[r.id];let n=r.parent;for(;n;)n.parent&&t.push(n.id),n=n.parent;r.path=t.reverse().join(":")}return r}(void 0,t,n);return l(t,n,e),e}function d(t,n){var e;return null===(e=p[t])||void 0===e?void 0:e[n]}function l(t,n,e){let o=p[t];o||(p[t]=o={}),o[n]=e}function m(t,n,e="runtime"){t.conAry&&t.conAry.forEach(t=>{f(t)}),t._exe=function(i,u,s,c){if(!w())return;O.execute&&O.execute(o.PIN,t.id,u);let f=i;if(!f)if(r(t.parent,o.NODE)){const n=t.parent.parent;f=d(!n._exeAsRoot_&&n.parent?n.parent.runtime.id:void 0,n.id)}else if(r(t.parent,o.FRAME)){const n=t.parent;f=d(!n._exeAsRoot_&&n.parent?n.parent.runtime.id:void 0,n.id)}let p=n.pin?n.pin(t):void 0;if(p&&!1===p.exe(u,c))return;const a=n=>{p&&p.exe(n,t,"返回"),"function"==typeof s&&s(n)};if("input"==t.direction)t.proxyPin&&t.proxyPin._exe?t.proxyPin.parent._exe(f,{[t.hostId]:u},void 0,t.direction):t.parent._exe(f,void 0,{[t.hostId]:u},a);else if("inner-input"===t.direction){if(!t.proxyPin||!t.proxyPin._exe)return;t.proxyPin._exe(f.parent,u,a,c)}else if("output"==t.direction||"inner-output"==t.direction)if(t.proxyPin&&t.proxyPin._exe)t.proxyPin._exe(i.parent,u,a,c);else{let n;"mock"===e&&t.mockData&&(n=t.mockData),t.conAry&&t.conAry.length>0&&t.conAry.forEach((e,o)=>{let i;a&&(void 0!==n?a(JSON.parse(t.mockData)):i=function(t){a(t)}),e._exe(f,u,i,t)})}}}function h(t,n,e="runtime"){i.each(t=>m(t,n,e),t.inputPins,t.inputPinExts,t.inputPinsInModel),i.each(t=>m(t,n,e),t.outputPins,t.inputPinExts,t.outputPinsInModel);const o=t,r=n.node(t),u={};o._exe=function(n,e,o,c){let f;i.each(t=>{void 0!==t.dummyData&&(!f&&(f={}),f[t.hostId]=t.dummyData)},t.inputPins,t.inputPinsInModel),o=f?Object.assign(f,o):o,u[n.id]||(function(n,e=s){if("function"!=typeof r.render)throw new Error("Render config function for node not found.");const o=n.path,i={};t.frames&&t.frames.forEach(t=>{i[t.id]=function(e,o=s){const i=t._exe(n,e,o);if(i)return i.path}});const u={inst:r.render(o,e,i,n),scopes:[]};n.comInsts[t.runtime.id]=u}(n,e),u[n.id]=!0);const p=n.comInsts[t.runtime.id];if(o)for(let t in o){const n=o[t];p.inst.inputs[t]=[n,c]}r.exe&&r.exe(p.inst,o,c)},t.frames&&t.frames.forEach(t=>{x(t,n)})}let y=new WeakMap;function _(t,n,e="runtime"){const o=t.parent.parent.runtime;t.from?f(t.from):console.warn(`组件(${o.title},${o.def.namespace})存在连接断开.`),t.to?f(t.to):console.warn(`组件(${o.title},${o.def.namespace})存在连接断开.`),t._exe=function(e,o,i){const r=n.joint?n.joint(t):void 0,u=t.parent.parent;if("input"==t.type){let n=e.comInsts[u.runtime.id].scopes.find(n=>n.hostId===t.parent.id);const s=n=>{r&&r.exe(o),t.to&&t.to._exe(n,o,i,t.type)};if(n){let t=n.hostId;n.parent.comInsts[u.runtime.id].scopes.forEach(n=>{n.hostId==t&&s(n)})}else{let n=y.get(t);n||y.set(t,n=new WeakMap);let o=n.get(e);o||n.set(e,o=[]),o.push(s)}}else r&&"function"==typeof r.exe&&r.exe(o),t.to&&t.to._exe(e.parent,o,i,t.type)}}function x(t,n,e="runtime"){t.comAry&&t.comAry.forEach(t=>{h(t,n,e)}),t.inputPins&&t.inputPins.forEach(t=>m(t,n,e)),t.outputPins&&t.outputPins.forEach(t=>m(t,n,e)),t.inputJoints&&t.inputJoints.forEach(t=>_(t,n,e)),t.outputJoints&&t.outputJoints.forEach(t=>_(t,n,e));const o=t,i={};o._update=function(o,r,u=s){const c=u+o.id,{curScope:f,coms:p}=i[c];t.comAry.forEach(t=>{p.push(t.runtime.id),"function"!=typeof t._exe&&(h(t,n,e),t._exe(f,u,void 0,void 0))})},o._exe=function(r,u,c=s,f,p){if(!r){if(t.parent){const n=d(t.parent?t.parent.runtime.id:t.id,t.id);n&&(r=n.parent)}r||(r=a(void 0,t.id+"-parent"))}const l=c+r.id;let m=!1;if(i[l]){const n=i[l].coms;(n.length!==t.comAry.length||t.comAry.find(t=>n.indexOf(t.runtime.id)<0))&&(m=!0)}if(!i[l]||m){let u,a;if(o._exeAsRoot_=!!p,c=void 0!==c?c:s,o._exeAsRoot_)u={inst:void 0,scopes:[]};else if(u=r.comInsts[t.parent.runtime.id],!u&&t._rootF)return;const d=[];"input"==(f="string"==typeof f?f:"input")&&(a=r.applyScope(!o._exeAsRoot_&&t.parent?t.parent.runtime.id:void 0,c,t.id,t._rootF),t.comAry.forEach(t=>{d.push(t.runtime.id),"function"!=typeof t._exe&&h(t,n,e),t._exe(a,c,void 0,void 0)})),i[l]={myInstScope:u,curScope:a,coms:d}}const{curScope:_}=i[l];if("input"==(f="string"==typeof f?f:"input")){const n={};if("mock"===e&&t.inputPins.length>0&&t.inputPins.forEach(t=>{t.mockData&&(n[t.hostId]=t.mockData)}),u=Object.assign(n,u))for(let n in u){const e=t.inputPins.find(t=>t.hostId==n);e?e._exe(_,u[n],void 0,void 0):"undefined"!=typeof console&&"function"==typeof console.error&&console.error(`No inputPin(id=${n}) found`)}return t.inputJoints&&t.inputJoints.forEach(t=>{!function(t,n){let e=n.parent,o=y.get(t);if(o){let t=o.get(e);t&&t.forEach(t=>{t(n)})}}(t,_)}),_}if(f.match(/^(output)|(inner-input)$/gi)){let n=_;if(t.outputPins.length){if(u)for(let t in u)n.returnParams[t]=u[t]||null;t.outputPins.find(t=>null==n.returnParams[t.hostId])||n.resolve()}}}}let P,v,g,E=null,I="stop";function w(){return"running"===I}let b={},O={};function A(t,n,e="runtime"){return function(t,n){if(!r(t,n))throw new Error("Invalid item type")}(t,o.FRAME),x(t,n,e),E={on(t,n){t&&"string"==typeof t&&"function"==typeof n&&(O[t.toLowerCase()]=n)},run(n=t,e){if("stop"===I&&(p={}),function(t){return Object.assign(b,t||{}),v=[],g=[],!0}(e))return function(){function t(t){try{t.exe&&t.exe()}catch(t){O.error?O.error(t):console.error(t)}n(P)}function n(e){if("stop"==I||e!==P)return;let o;"pause"==I&&setTimeout(n,1e3),g.length>0?o=g.shift():v.length>0&&(o=v.shift()),o?b.debug?setTimeout(()=>{t(o)},o.debugSleep):"number"==typeof o.sleep&&o.sleep>-1?setTimeout(()=>{t(o)},0):t(o):setTimeout(t=>n(e))}I="running",P=u(),n(P),new Promise((t,n)=>{})}(),t=>n._exe(void 0,t,void 0,"input",!0)},update:(n,e=t)=>(e._update(n,void 0,void 0),!0),pause:N,stop(){const t=(I="stop",!0);return E=null,v=void 0,g=void 0,p={},t}}}function N(){return I="pause",!0}function M(t,n){const e={_all:{},_waiting:{},set(t,n){this._all[t]=n;const e=this._waiting[t];if(e)try{e.forEach(t=>{n(t)}),delete this._waiting[t]}finally{}return!0},get(t){return this._all[t]},waiting(t,n){let e=this._waiting[t];e||(e=this._waiting[t]=[]),e.push(n)}},o=u(),r={};return{inputs:new Proxy({},{ownKeys(n){const e=[];return i.each(t=>{e.push(t.hostId)},t.inputPins,t.inputPinsInModel),e},getOwnPropertyDescriptor:t=>({enumerable:!0,configurable:!0}),get:(t,n,i)=>"__id__"===n?o:function(t){e.set(n,(function(e){const o=r[n];if(void 0!==e&&o){r[n]=void 0;const[o,i]=e;t(o,(function(t){"function"==typeof i&&i(t)}))}}))},set(t,o,i,u){r[o]=i;const s=e.get(o);return s?((null==n?void 0:n.input)&&n.input(),s(i)):e.waiting(o,i),!0}}),outputs:new Proxy({},{ownKeys(n){const e=[];return i.each(t=>{e.push(t.hostId)},t.outputPins,t.outputPinsInModel),e},getOwnPropertyDescriptor:t=>({enumerable:!0,configurable:!0}),get(e,r,u){if("__id__"===r)return o;let s;return function(e,o){if(t.outputPins){s=o;const u=function(t){"function"==typeof s&&s(t)},c=i.find(({hostId:t})=>r==t,t.outputPins,t.outputPinsInModel);if(!c)throw new Error(`No output(hostId=${r}) found.`);Promise.resolve().then(()=>{(null==n?void 0:n.output)&&n.output(e),c._exe(null,e,u,t)})}}}})}}}])},function(t,n,e){"use strict";var o,i;function r(t,n){return t&&"object"==typeof t&&t._type==n}function u(){let t="abcdefhijkmnprstwxyz",n=t.length,e="";for(let o=0;o<6;o++)e+=t.charAt(Math.floor(Math.random()*n));return"u_"+e}e.r(n),e.d(n,"T_Scope",(function(){})),e.d(n,"compile",(function(){return A})),e.d(n,"createIO",(function(){return M})),e.d(n,"E_ItemType",(function(){return o})),e.d(n,"isTypeof",(function(){return r})),e.d(n,"UNDEFINED_FRAME_LABEL",(function(){return s})),function(t){t[t.FRAME=0]="FRAME",t[t.NODE=1]="NODE",t[t.PIN=2]="PIN",t[t.JOINT=3]="JOINT",t[t.CONNECTION=4]="CONNECTION"}(o||(o={})),function(t){t.each=function(t,...n){n.forEach(n=>{n&&n.forEach(t)})},t.find=function(t,...n){let e;return n.find(n=>{if(n)return e=n.find(n=>t(n))}),e}}(i||(i={}));const s="UNDEFINED_FRAME_LABEL";var c=e(0);function f(t){let n=t;n._exe||(n._exe=function(e,i,r,u){if(!w())return;const s=t.finishPin.forkedFrom||t.finishPin;if("function"!=typeof s._exe){const e=Object(c.isTypeof)(t.startPin.parent,o.NODE)?t.startPin.parent:void 0;throw new Error(`连接(来自:${e?e.runtime.title:"未知组件"}，${n.title})已断开.`)}b.debug&&b.debug.stepTime,s._exe(e,i,r,u)})}let p;function a(t,n){const e=function t(n,e,o,i){let r={id:u(),instId:e,hostId:o,path:void 0,parent:n,returnParams:{},resolve:null,comInsts:{},applyScope(n,e,o,i){const u=t(r,n,o,i);let s=r.comInsts[n];return s&&(!s.scopes&&(s.scopes=[]),s.scopes.push(u)),l(n,o,u),u}};if(i)r.path=r.id;else{const t=[r.id];let n=r.parent;for(;n;)n.parent&&t.push(n.id),n=n.parent;r.path=t.reverse().join(":")}return r}(void 0,t,n);return l(t,n,e),e}function d(t,n){var e;return null===(e=p[t])||void 0===e?void 0:e[n]}function l(t,n,e){let o=p[t];o||(p[t]=o={}),o[n]=e}function m(t,n,e="runtime"){t.conAry&&t.conAry.forEach(t=>{f(t)}),t._exe=function(i,u,s,c){if(!w())return;O.execute&&O.execute(o.PIN,t.id,u);let f=i;if(!f)if(r(t.parent,o.NODE)){const n=t.parent.parent;f=d(!n._exeAsRoot_&&n.parent?n.parent.runtime.id:void 0,n.id)}else if(r(t.parent,o.FRAME)){const n=t.parent;f=d(!n._exeAsRoot_&&n.parent?n.parent.runtime.id:void 0,n.id)}let p=n.pin?n.pin(t):void 0;if(p){if(!1===p.exe(u,c))return}const a=n=>{p&&p.exe(n,t,"返回"),"function"==typeof s&&s(n)};if("input"==t.direction)if(t.proxyPin&&t.proxyPin._exe){t.proxyPin.parent._exe(f,{[t.hostId]:u},void 0,t.direction)}else t.parent._exe(f,void 0,{[t.hostId]:u},a);else if("inner-input"===t.direction){if(!t.proxyPin||!t.proxyPin._exe)return;t.proxyPin._exe(f.parent,u,a,c)}else if("output"==t.direction||"inner-output"==t.direction)if(t.proxyPin&&t.proxyPin._exe)t.proxyPin._exe(i.parent,u,a,c);else{let n;"mock"===e&&t.mockData&&(n=t.mockData),t.conAry&&t.conAry.length>0&&t.conAry.forEach((e,o)=>{let i;a&&(void 0!==n?a(JSON.parse(t.mockData)):i=function(t){a(t)}),e._exe(f,u,i,t)})}}}function h(t,n,e="runtime"){i.each(t=>m(t,n,e),t.inputPins,t.inputPinExts,t.inputPinsInModel),i.each(t=>m(t,n,e),t.outputPins,t.inputPinExts,t.outputPinsInModel);const o=t,r=n.node(t),u={};o._exe=function(n,e,o,c){let f;i.each(t=>{void 0!==t.dummyData&&(!f&&(f={}),f[t.hostId]=t.dummyData)},t.inputPins,t.inputPinsInModel),o=f?Object.assign(f,o):o,u[n.id]||(!function(n,e=s){if("function"!=typeof r.render)throw new Error("Render config function for node not found.");const o=n.path,i={};t.frames&&t.frames.forEach(t=>{i[t.id]=function(e,o=s){const i=t._exe(n,e,o);if(i)return i.path}});const u={inst:r.render(o,e,i,n),scopes:[]};n.comInsts[t.runtime.id]=u}(n,e),u[n.id]=!0);const p=n.comInsts[t.runtime.id];if(o)for(let t in o){const n=o[t];p.inst.inputs[t]=[n,c]}r.exe&&r.exe(p.inst,o,c)},t.frames&&t.frames.forEach(t=>{x(t,n)})}let y=new WeakMap;function _(t,n,e="runtime"){const o=t.parent.parent.runtime;t.from?f(t.from):console.warn(`组件(${o.title},${o.def.namespace})存在连接断开.`),t.to?f(t.to):console.warn(`组件(${o.title},${o.def.namespace})存在连接断开.`);t._exe=function(e,o,i){const r=n.joint?n.joint(t):void 0,u=t.parent.parent;if("input"==t.type){let n=e.comInsts[u.runtime.id].scopes.find(n=>n.hostId===t.parent.id);const s=n=>{r&&r.exe(o),t.to&&t.to._exe(n,o,i,t.type)};if(n){let t=n.hostId;n.parent.comInsts[u.runtime.id].scopes.forEach(n=>{n.hostId==t&&s(n)})}else{let n=y.get(t);n||y.set(t,n=new WeakMap);let o=n.get(e);o||n.set(e,o=[]),o.push(s)}}else r&&"function"==typeof r.exe&&r.exe(o),t.to&&t.to._exe(e.parent,o,i,t.type)}}function x(t,n,e="runtime"){t.comAry&&t.comAry.forEach(t=>{h(t,n,e)}),t.inputPins&&t.inputPins.forEach(t=>m(t,n,e)),t.outputPins&&t.outputPins.forEach(t=>m(t,n,e)),t.inputJoints&&t.inputJoints.forEach(t=>_(t,n,e)),t.outputJoints&&t.outputJoints.forEach(t=>_(t,n,e));const o=t,i={};o._update=function(o,r,u=s){const c=u+o.id,{curScope:f,coms:p}=i[c];t.comAry.forEach(t=>{p.push(t.runtime.id),"function"!=typeof t._exe&&(h(t,n,e),t._exe(f,u,void 0,void 0))})},o._exe=function(r,u,c=s,f,p){if(!r){if(t.parent){const n=d(t.parent?t.parent.runtime.id:t.id,t.id);n&&(r=n.parent)}r||(r=a(void 0,t.id+"-parent"))}const l=c+r.id;let m=!1;if(i[l]){const n=i[l].coms;(n.length!==t.comAry.length||t.comAry.find(t=>n.indexOf(t.runtime.id)<0))&&(m=!0)}if(!i[l]||m){let u,a;if(o._exeAsRoot_=!!p,c=void 0!==c?c:s,o._exeAsRoot_)u={inst:void 0,scopes:[]};else if(u=r.comInsts[t.parent.runtime.id],!u&&t._rootF)return;const d=[];"input"==(f="string"==typeof f?f:"input")&&(a=r.applyScope(!o._exeAsRoot_&&t.parent?t.parent.runtime.id:void 0,c,t.id,t._rootF),t.comAry.forEach(t=>{d.push(t.runtime.id),"function"!=typeof t._exe&&h(t,n,e),t._exe(a,c,void 0,void 0)})),i[l]={myInstScope:u,curScope:a,coms:d}}const{curScope:_}=i[l];if("input"==(f="string"==typeof f?f:"input")){const n={};if("mock"===e&&t.inputPins.length>0&&t.inputPins.forEach(t=>{t.mockData&&(n[t.hostId]=t.mockData)}),u=Object.assign(n,u))for(let n in u){const e=t.inputPins.find(t=>t.hostId==n);e?e._exe(_,u[n],void 0,void 0):"undefined"!=typeof console&&"function"==typeof console.error&&console.error(`No inputPin(id=${n}) found`)}return t.inputJoints&&t.inputJoints.forEach(t=>{!function(t,n){let e=n.parent,o=y.get(t);if(o){let t=o.get(e);t&&t.forEach(t=>{t(n)})}}(t,_)}),_}if(f.match(/^(output)|(inner-input)$/gi)){let n=_;if(t.outputPins.length){if(u)for(let t in u)n.returnParams[t]=u[t]||null;t.outputPins.find(t=>null==n.returnParams[t.hostId])||n.resolve()}}}}let P,v,g,E=null;let I="stop";function w(){return"running"===I}let b={},O={};function A(t,n,e="runtime"){return function(t,n){if(!r(t,n))throw new Error("Invalid item type")}(t,o.FRAME),x(t,n,e),E={on(t,n){t&&"string"==typeof t&&"function"==typeof n&&(O[t.toLowerCase()]=n)},run(n=t,e){if("stop"===I&&(p={}),function(t){return Object.assign(b,t||{}),v=[],g=[],!0}(e))return function(){function t(t){try{t.exe&&t.exe()}catch(t){O.error?O.error(t):console.error(t)}n(P)}function n(e){if("stop"==I||e!==P)return;let o;if("pause"==I&&setTimeout(n,1e3),g.length>0?o=g.shift():v.length>0&&(o=v.shift()),o){b.debug?setTimeout(()=>{t(o)},o.debugSleep):"number"==typeof o.sleep&&o.sleep>-1?setTimeout(()=>{t(o)},0):t(o)}else setTimeout(t=>n(e))}I="running",P=u(),n(P),new Promise((t,n)=>{})}(),t=>n._exe(void 0,t,void 0,"input",!0)},update:(n,e=t)=>(e._update(n,void 0,void 0),!0),pause:N,stop(){const t=(I="stop",!0);return E=null,v=void 0,g=void 0,p={},t}}}function N(){return I="pause",!0}function M(t,n){const e={_all:{},_waiting:{},set(t,n){this._all[t]=n;const e=this._waiting[t];if(e)try{e.forEach(t=>{n(t)}),delete this._waiting[t]}finally{}return!0},get(t){return this._all[t]},waiting(t,n){let e=this._waiting[t];e||(e=this._waiting[t]=[]),e.push(n)}},o=u(),r={};return{inputs:new Proxy({},{ownKeys(n){const e=[];return i.each(t=>{e.push(t.hostId)},t.inputPins,t.inputPinsInModel),e},getOwnPropertyDescriptor:t=>({enumerable:!0,configurable:!0}),get:(t,n,i)=>"__id__"===n?o:function(t){e.set(n,(function(e){const o=r[n];if(void 0!==e&&o){r[n]=void 0;const[o,i]=e;t(o,(function(t){"function"==typeof i&&i(t)}))}}))},set(t,o,i,u){r[o]=i;const s=e.get(o);return s?((null==n?void 0:n.input)&&n.input(),s(i)):e.waiting(o,i),!0}}),outputs:new Proxy({},{ownKeys(n){const e=[];return i.each(t=>{e.push(t.hostId)},t.outputPins,t.outputPinsInModel),e},getOwnPropertyDescriptor:t=>({enumerable:!0,configurable:!0}),get(e,r,u){if("__id__"===r)return o;let s;return function(e,o){if(t.outputPins){s=o;const u=function(t){"function"==typeof s&&s(t)},c=i.find(({hostId:t})=>r==t,t.outputPins,t.outputPinsInModel);if(!c)throw new Error(`No output(hostId=${r}) found.`);Promise.resolve().then(()=>{(null==n?void 0:n.output)&&n.output(e),c._exe(null,e,u,t)})}}}})}}}])}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL3hnQ29tcGlsZXJXZWIvZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18yX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){eval('!function(e,t){ true?module.exports=t(__webpack_require__(2),__webpack_require__(4)):undefined}(window,(function(__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__5__){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=7)}([function(e,t,n){"use strict";n.d(t,"c",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i})),n.d(t,"d",(function(){return c})),n.d(t,"f",(function(){return f})),n.d(t,"e",(function(){return u}));const r="_ref_",o="_hc_",i="_from_",c="_merge_data_",f={},u={}},function(e,t){e.exports=__WEBPACK_EXTERNAL_MODULE__1__},function(e,t,n){"use strict";(function(e){function r(e="u_"){return e+function(e,t){const n="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=[];let o;if(t=t||n.length,e)for(o=0;o<e;o++)r[o]=n[0|Math.random()*t];else{let e;for(r[8]=r[13]=r[18]=r[23]="-",r[14]="4",o=0;o<36;o++)r[o]||(e=0|16*Math.random(),r[o]=n[19==o?3&e|8:e])}return r.join("")}(8,16)}function o(e,t){let n;if("string"==typeof t){let e=t.lastIndexOf(".");n=-1!==e?t.substring(e+1):t}else n=e.name;return n.replaceAll(/[^\\w]/gi,"_")}function i(e,t){let n=[];do{if(e==Object.prototype||e==Function.prototype)break;n=n.concat(Object.getOwnPropertyNames(e))}while(e=Object.getPrototypeOf(e));return n.filter(n=>{if(!t||t&&"function"!=typeof e[n])return"constructor"!=n&&!/^__.+/g.test(n)})}function c(e,t){let n=Object.getOwnPropertyDescriptor(e,t);if(void 0===n){let r=e;for(;void 0===n&&null!=(r=Object.getPrototypeOf(r))&&r!==Object.prototype;)n=Object.getOwnPropertyDescriptor(r,t)}return n}n.d(t,"g",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return c})),n.d(t,"e",(function(){return f})),n.d(t,"a",(function(){return u})),n.d(t,"f",(function(){return s}));function f(e){return"symbol"==typeof e||function(e){return"object"==typeof e&&null!==e}(e)&&"[object Symbol]"===Object.prototype.toString.call(e)}function u(){let e,t=[];return{push(n,...r){t.find(e=>e.task===n)||t.push({task:n,args:r}),e||(e=1,Promise.resolve().then(()=>{e=void 0,t.forEach(({task:e,args:n},r)=>{e(...n),t[r]=void 0}),t=t.filter(e=>e)}))}}}function s(t,n){const r=window||e;let o;if(r){let e=r.__rxui__;void 0===e&&(e=r.__rxui__={}),o=e[t]?e[t]:e[t]=n}else o=n;return o}}).call(this,n(6))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o}));const r="_ignore_",o="_ignore_me_"},function(module,__webpack_exports__,__webpack_require__){"use strict";(function(global){__webpack_require__.d(__webpack_exports__,"c",(function(){return SerializedReg})),__webpack_require__.d(__webpack_exports__,"a",(function(){return Ignore})),__webpack_require__.d(__webpack_exports__,"b",(function(){return Serializable})),__webpack_require__.d(__webpack_exports__,"d",(function(){return searchForMeta}));var _state_common__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2),_constants__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(3);const MetaKey="_rxui_meta_",SerializedReg=global._rxui_serializedReg_||(global._rxui_serializedReg_={});function Ignore(e,t){let n=Object.getOwnPropertyDescriptor(e,_constants__WEBPACK_IMPORTED_MODULE_2__.a);if(n)n.value[t]=!0;else{let n,r=Object.getPrototypeOf(e);for(;r&&r!==Object.prototype&&(n=Object.getOwnPropertyDescriptor(r,_constants__WEBPACK_IMPORTED_MODULE_2__.a),!n);)r=Object.getPrototypeOf(r);const o=Object.assign({},n&&n.value);Object.defineProperty(e,_constants__WEBPACK_IMPORTED_MODULE_2__.a,{value:o,writable:!0}),o[t]=!0}}function Serializable(e){if(1==arguments.length){const e=arguments[0];if("function"==typeof e)return hashcodeFn(e,e.name);if("string"==typeof e)return function(t){return hashcodeFn(t,e)};if("object"==typeof e&&"string"==typeof e.name){let{name:t,load:n}=e;return function(e){return hashcodeFn(e,t,n)}}throw new Error("@Serializable\'s param error.")}throw new Error("@Serializable should be used to decorate class only.")}function searchForMeta(e){let t;const n=e.constructor&&e.constructor[MetaKey],r=Object.getPrototypeOf(e),o=r&&searchForMeta(r);return o?(t=Object.assign({},n||{}),Object.keys(o).forEach(e=>{t[e]=n&&n[e]?Object.assign({},o[e],n[e]):Object.assign({},o[e])}),t):n}function hashcodeFn(fn,name,load){let fnName=Object(_util__WEBPACK_IMPORTED_MODULE_1__.b)(fn,name);const getUid=_util__WEBPACK_IMPORTED_MODULE_1__.g;let proxyFn=null,proto;return eval(`\\n      proxyFn = function ${fnName}(){//Proxied and named\\n        try{\\n          const _this = new fn(...arguments)\\n          \\n          Object.defineProperty(_this, \'${_state_common__WEBPACK_IMPORTED_MODULE_0__.b}\', {\\n              value:getUid(\'${fnName}_\'),\\n              writable: true,\\n              enumerable:false\\n          })\\n\\n          Object.setPrototypeOf(_this,proto)\\n          return _this\\n        }catch(ex){//not support ES6?\\n          throw ex\\n          \\n          // var args = []\\n          //\\n          // for(var i=0;i<arguments.length;i++){\\n          //   args.push(arguments[i])\\n          // }\\n          // fn.apply(this,args)\\n          //\\n          // Object.defineProperty(this, \'${_state_common__WEBPACK_IMPORTED_MODULE_0__.b}\', {\\n          //     value:getUid(\'${fnName}_\'),\\n          //     writable: true,\\n          //     enumerable:false\\n          // })\\n        }\\n      }\\n      proto = {\\n        constructor:proxyFn\\n      }\\n      var statics = Object.getOwnPropertyNames(fn)\\n      var regc = /^(length|name|prototype)$/gi\\n      for(var i=0;i<statics.length;i++){\\n        var nm = statics[i]\\n        if(!nm.match(regc)){\\n          proxyFn[nm] = fn[nm]\\n        }\\n      }\\n      Object.setPrototypeOf(proto,fn.prototype)\\n      proxyFn.prototype = proto\\n  `),SerializedReg[name]={proto:proxyFn,load:load},setMeta(proxyFn,"serialized","name",name),proxyFn}function setMeta(e,t,n,r){const o=0==Object.getOwnPropertyNames(e).filter(e=>e==MetaKey).length?e[MetaKey]={}:e[MetaKey];(o[t]||(o[t]={}))[n]=r||e[n]}}).call(this,__webpack_require__(6))},function(e,t){e.exports=__WEBPACK_EXTERNAL_MODULE__5__},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";n.r(t),n.d(t,"igonreObservableBefore",(function(){return ge})),n.d(t,"render",(function(){return b})),n.d(t,"useObservable",(function(){return H})),n.d(t,"useComputed",(function(){return Z})),n.d(t,"useWatcher",(function(){return ee})),n.d(t,"useOnce",(function(){return te})),n.d(t,"observe",(function(){return ne})),n.d(t,"observable",(function(){return V})),n.d(t,"from",(function(){return ie})),n.d(t,"undo",(function(){return ae})),n.d(t,"redo",(function(){return le})),n.d(t,"takeSnap",(function(){return _e})),n.d(t,"Serializable",(function(){return M.b})),n.d(t,"Ignore",(function(){return M.a})),n.d(t,"dump",(function(){return C})),n.d(t,"load",(function(){return P})),n.d(t,"recycle",(function(){return S})),n.d(t,"clone",(function(){return k})),n.d(t,"ignore",(function(){return I})),n.d(t,"dragable",(function(){return he})),n.d(t,"evt",(function(){return ye})),n.d(t,"uuid",(function(){return f.g}));var r=n(1),o=n.n(r),i=n(5);const c=["onContextMenu","onClick","onDoubleClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onDrop","onDrag","onDragStart","onDragEnd","onDragEnter","onDragLeave","onDragOver","onDragExit","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","onKeyPress","onKeyDown","onKeyUp","onCopy","onCut","onPaste","onChange","onInput","onSubmit","onFocus","onBlur","onScroll"];var f=n(2);const{ReactCurrentDispatcher:u}=o.a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,s=Object(f.f)("CurrentNodeInfo",{});function a(e,t,n){if(!t||"function"!=typeof t._onError_&&"function"!=typeof t._onerror_){const r=t._parent_info_;if(r){const t=j.searchNode(r);if(t.props)return a(e,t.props,n)}throw n}return(t._onError_||t._onerror_)(n,e)}function l(e){const[t,n]=Object(r.useState)(0);return Object(r.useCallback)(e=>{n(e=>e+1)},[])}let p,d;function _(e,...t){if(p||(p=o.a.createElement,o.a.createElement=d=function(...e){let t;if(e.length>0&&"function"==typeof(t=e[0])){if(!(t.prototype instanceof o.a.Component)){const n=y(t);e.splice(0,1,n);const r=e[1]||{};try{Object.defineProperty(r,"_parent_info_",{value:o.a.createElement._cur_parent_info_,writable:!1,enumerable:!0,configurable:!1})}catch(e){console.info(`Object.defineProperty \'PARENT_NODE_INFO\' error,in object ${r}.`)}e.splice(1,1,r)}return p(...e)}if("string"==typeof e[0]){const t=e[1];if(t){const e=o.a.createElement._render_in_node_info_;if(e){const n=e.id;c.forEach(e=>{let r=t[e];"function"==typeof r&&(t[e]=function(...e){let t;return j.curRT.setNodeInfoId(n),Object(i.unstable_batchedUpdates)(()=>{t=r(...e)}),j.curRT.clear(),t})})}}}return p(...e)}),t.length>0){let e=t[0];if(e){if("function"==typeof e){o.a.createElement=p;try{e=e()}catch(e){throw e}finally{o.a.createElement=d}}const n=e.type,r=e.props;if(n){const e=y(n);t.splice(0,1,o.a.createElement(e,r))}}}return e.call(void 0,...t)}const h=function(...e){return _(i.render,...e)};h.test=function(e,t){return _(e,t)};var b=h;function y(e){const t="_observed_";let n=e[t];if(!n){n=function(e){function t(n,i){const c=j.getCurUpdater(),p=Object(r.useMemo)(()=>{const t={id:Object(f.g)(),component:e,name:e.name,parent:j.searchNode(n._parent_info_),props:n};return j.regNode(t),t},[]);s.current=p,o.a.createElement._cur_parent_info_=p.id,o.a.createElement._render_in_node_info_=p;const d={hoc:t,component:e,fiber:p,update:l(e)};Object(r.useEffect)(()=>()=>{j.cleanUpdater(d)},[]),j.setCurUpdater(d);const _=u.current;let h,b;if(_){const e=_.useMemo;if(h=_.useEffect,p){if(e&&!e._rxui_){const t=function(t,r){return e((function(...e){const r=j.getCurUpdater();let o;j.setCurUpdater(void 0);try{o=t(...e)}catch(e){a("useMemo",n,e)}finally{j.setCurUpdater(r)}return o}),r)};t._rxui_=!0,_.useMemo=t}if(h&&!h._rxui_){const e=function(e,t){return h((function(...t){let r;j.curRT.setNodeInfoId(p.id);try{r=e(...t)}catch(e){a("useEffect",n,e)}finally{j.curRT.clear()}return r}),t)};e._rxui_=!0,_.useEffect=e}}}try{b=e(n,i)}catch(e){b=a("render",n,e)}return null==b&&(b=o.a.createElement(o.a.Fragment)),h&&(_.useEffect=h),c&&j.setCurUpdater(c),s.current=void 0,o.a.createElement._render_in_node_info_=p.parent,b}return t.displayName=e.displayName||e.name,Object(r.memo)(t)}(e);try{e[t]=n}catch(e){}}const i=Object.getOwnPropertyNames(e);return i&&i.forEach(t=>{if(!/_observed_/.test(t))try{n[t]=e[t]}catch(e){console.error(e)}}),n}const g=Object(f.f)("nodes",{});let m,v,E=null,w=Object(f.f)("curUpdater",{cur:void 0});const O=Object(f.f)("batchStack",[]);var j;function x(e,t){return e&&t&&e.fiber.id===t.fiber.id&&e.hoc===t.hoc}!function(e){function t(e){return g[e]}e.curRT={setNodeInfoId(e){m=e},setInfoIdForDelay(){v=m},getNode(){const e=s.current;if(e)return g[e.id];if(m){const e=g[m];if(e)return e}return v?g[v]:void 0},clear(){m=null},clearDelay(){v=null}},e.regNode=function(e){const n={id:e.id,props:e.props,component:e.component,componentName:e.name,parent:null,children:[],subjectAry:[],observerAry:[]};if(g[n.id]=n,E){let r,o=e.parent;if(o){if(o.invalid)return;r=t(o.id),n.parent=r,r.children.push(n)}}else E=n},e.regListener=function(e,n){const r=s.current;if(!r)throw new Error("CurrentNodeInfo.current is undefined.");const o=t(r.id);return n&&o[e+"Ary"].push(n),o},e.getCurNode=function(){const e=s.current;if(!e)throw new Error("CurrentNodeInfo not found.");return t(e.id)},e.searchNode=t,e.setCurUpdater=function(e){w&&(w.cur=e)},e.getCurUpdater=function(){if(w)return w.cur},e.igonreObservableBefore=function(){w={}},e.cleanUpdater=function(e){const t=e.fiber.id,n=g[t];if(!n)throw new Error(`node[id=${t}] not found.`);n.parent&&(n.parent.children=n.parent.children.filter(e=>e.id!==t)),e.fiber.invalid=!0,g[t].invalid=!0,g[t]=null,delete g[t]},e.applyBatch=function(){const e=[];return O.push(e),{commit(){O.pop(),e.forEach(e=>{e&&e.fiber&&!e.fiber.invalid&&e.update(e)})},cancel(){O.pop()}}};const n=function(){let e,t=[];return{push(n){t.find(e=>x(e,n))||t.push(n),e||(e=1,Promise.resolve().then(()=>{e=void 0,t.forEach((e,n)=>{t[n]=void 0,e&&e.fiber&&!e.fiber.invalid&&e.update()}),t=t.filter(e=>e)}))}}}();e.applyAgent=function(){const t={};return{push(n,r){let o=t[r];o||(o=t[r]=[]);const i=e.getCurUpdater();if(i){let e;o.find((t,n)=>{if(x(t,i))return e=n,!0})?e>=0&&(o[e]=i):o.push(i)}},update(r,o,c){const f=r+"=>"+("function"==typeof c?"function":"object"==typeof c?"{..}":c),u=O[O.length-1];if(u){const e=t[o];e&&e.length>0&&e.forEach(e=>{u.find(t=>x(t,e))||(e.reason=`[${e.fiber.id}]${f}`,u.push(e))})}else{let r;(r=t[o])&&(Object(i.unstable_batchedUpdates)(()=>{t[o]=r.map(t=>{if(t&&t.fiber&&!t.fiber.invalid){t.reason=`[${t.fiber.id}]${f}`;const r=e.getCurUpdater();if(m&&r&&r===t)return;return r&&r.fiber.id!==t.fiber.id?m&&m===t.fiber.id?t.update(t):n.push(t):t.update(t),t}}).filter(e=>e)}),0===t[o].length&&(t[o]=void 0,delete t[o]))}}}}}(j||(j={}));var T=n(0),M=n(4),A=n(3);function P(e,t){if("object"!=typeof e)throw new Error("Invalid data format.");e=JSON.parse(JSON.stringify(e));const{refs:n,defs:r}={refs:{},defs:{}};for(let t in e){const o=e[t];if("object"!=typeof o||"object"!=typeof o.def||"object"!=typeof o.refs)throw new Error("Invalid data format.");const{def:i,refs:c,consts:f}=o;if(r[t]=i,c)for(const e in c)c[e].__consts__=f;Object.assign(n,c)}Object.keys(n).forEach(e=>{let t,r=n[e];if(void 0!==(t=r[T.a])){t=r.__consts__.froms[t],delete r.__consts__;const o=M.c[t];if(!o)return;if(!o||!o.proto)throw new Error("Invalid data format.");{const i=R(o.proto);i[T.a]=t,i[T.d]=r,n[e]=i}}});const o={refs:n,didMap:{}};function i(e,t){const n=D(o,e,t);return t?(Object.keys(n).forEach(e=>{let r=n[e];t[e]=r}),t):n}const c=j.applyBatch(),f={};return Object.keys(r).forEach(e=>{const n=r[e];if(t)f[e]=D(o,n);else{const t=T.f[e];void 0!==t?f[e]=i(n,t):T.e[e]=t=>{const r=j.applyBatch();f[e]=i(n,t),r.cancel()}}}),c.commit(),f}function D({refs:e,didMap:t},n,r){if(Array.isArray(n))return n.map(n=>D({refs:e,didMap:t},n));if("object"==typeof n&&n){if(n[T.b])return t[n[T.b]]=r||n,r||n;const o=n[T.c];if("string"==typeof o){if(!r&&t[o])return t[o];n=e[o],t[o]=r||n}let i,c;if(c=n[T.a]){if(delete n[T.a],i=M.c[c],!i)return;if(!i||!i.proto)throw new Error("Invalid data format.")}let u=n[T.d];if(void 0===u&&i&&(u=n,n=R(i.proto)),u){delete n[T.d];let r=Object(f.c)(u);if(r.length>0){const o=u[A.a];r.forEach(r=>{if(r===A.a)return;const c=Object(f.d)(n,r);if(!(c&&c.get&&!c.set||o&&o[r]||o&&o[r])){const o=D({refs:e,didMap:t},u[r]);try{let e;if(i&&"function"==typeof(e=i.load)){let t=e(n,r,o);void 0!==t&&(n[r]=t)}else n[r]=o}catch(e){throw e}}})}}else{let r=Object(f.c)(n);if(r.length>0){const o=n[A.a];r.forEach(r=>{if(r===A.a)return;const c=Object(f.d)(n,r);if(!(c&&c.get&&!c.set||o&&o[r]||o&&o[r])){o&&console.log(r);const c=D({refs:e,didMap:t},n[r]);try{let e;const t=Object(f.d)(n,r);if(t&&t.get&&!t.set)return;if(i&&"function"==typeof(e=i.load)){let t=e(n,r,c);void 0!==t&&(n[r]=t)}else n[r]=c}catch(e){throw e}}})}}}return n}function R(e){return new e}function C(...e){const t={},n=(e,t,n)=>n;return Object.keys(T.f).forEach(r=>{if(0==e.length||e.find(e=>e===r)){const e=function(e,t,n){let r={},o={},i={froms:[]};const c={consts:i,refs:r,def:function e(c){if("object"!=typeof c||!c)return c;if(N(c))return;if(c[T.b]){if(r[c[T.b]])return{[T.c]:c[T.b]};if(o[c[T.b]])return{[T.c]:c[T.b]}}let u={};if(Array.isArray(c)&&(u=[]),c[T.b]&&(o[c[T.b]]=!0),Array.isArray(c)){const n=[];Object.keys(c).forEach(r=>{try{if(r.match(/^__.+__$/g)||u[r])return}catch(e){}const o=c[r];N(o)?(n.push(r),u[r]=void 0):u[r]=e(t(c,r,o))}),n.length>0&&n.forEach(e=>u.splice(e,1))}else{let r=Object(f.c)(c);if(r.length>0){const o=c[A.a];r.forEach(r=>{if(r===A.a)return;const i=Object(f.d)(c,r);i&&i.get&&!i.set||o&&o[r]||(!n||n&&"function"!=typeof c[r])&&(u[r]=e(t(c,r,c[r])))})}!0===c._observable_&&(u._observable_=!0);const o=Object(M.d)(c);let s;if(o&&(s=o.serialized)){i.froms.find(e=>e===s.name);let e=i.froms.indexOf(s.name);-1===e&&(i.froms.push(s.name),e=i.froms.length-1),u._from_=e}else if(c[T.b])throw new Error("Invalid data format.")}if(u[T.b]){const e=u[T.b];return r[e]=u,delete u[T.b],{[T.c]:e}}return u}(e)};return o=void 0,c}(T.f[r],n,!0);t[r]=e}}),t}function N(e){return e&&"object"==typeof e&&e[A.b]}function U(e,t,n){var r;if(n&&"function"==typeof n){const e=Object(M.d)(t);if(!(null===(r=null==e?void 0:e.serialized)||void 0===r?void 0:r.name))throw new Error("No @Serializable({name:string}|string) decorator on "+n)}const o=T.e[e];void 0!==o&&o(t),T.f[e]=t}function S(e){if(!e[T.b])throw new Error(`Model must has ${T.b} property.`);let t=!1,n={},r=o=>{if("object"==typeof o&&null!==o){if(o[T.b]==e[T.b])return!0;if(n[o[T.b]])return;n[o[T.b]]=!0;Object(f.c)(o).forEach(e=>{const n=Object(f.d)(o,e);if(n&&n.get&&!n.set)return;let i=o[e];Array.isArray(i)?(i=i.map(e=>r(e)?void(t=!0):e),t&&(o[e]=i.filter(e=>void 0!==e))):r(i)&&(t=!0,o[e]=void 0)})}};return Object.keys(T.f).forEach(e=>{r(T.f[e])}),n=void 0,t}function k(e,t){let n=[];return function e(r){if("object"!=typeof(r=X(r))||!r)return r;for(let e=0;e<n.length;e++)if(n[e].target===r)return n[e].copyTarget;let o={};if(Array.isArray(r)&&(o=[]),n.push({target:r,copyTarget:o}),Array.isArray(r))Object.keys(r).forEach(t=>{/^__.+__$/g.test(t)||o[t]||(o[t]=e(r[t]))});else if(r instanceof RegExp);else{let n=Object(f.c)(r);if(n.length>0){let i=r[A.a];n.forEach(n=>{if(n!==T.b&&(t||!i||!i[n])){const t=Object(f.d)(r,n);t&&t.get?Object.defineProperty(o,n,{get:()=>e(r[n])}):o[n]=e(r[n])}})}}return o}(e)}function I(e){"object"==typeof e&&(e[A.b]=!0)}const $=/^before\\@splice$/;let L;class F{constructor(e){this._undo={states:[],reg:new WeakMap},this._redo={states:[],reg:new WeakMap},this.listener=e}setUndo(e,t,n,r){this.sleeping||this.set(e,t,n,this._undo)&&this.listener&&(void 0!==r&&!0!==r||this.listener(e,t,n))}setRedo(e,t,n,r){this.sleeping||this.set(e,t,n,this._redo)&&this.listener&&(void 0!==r&&!0!==r||this.listener(e,t,n))}sleep(e){this.sleeping=!0;try{"function"==typeof e&&e()}catch(e){throw e}finally{this.sleeping=!1}}dump(){return L=null,this}undo(){L=null,this._undo.states.forEach(({obj:e,prop:t,val:n})=>{this.setRedo(e,t,B(t)?e:e[t],!1),this.setVal(e,t,n)})}redo(){L=null,this._redo.states.forEach(({obj:e,prop:t,val:n})=>{this.setUndo(e,t,B(t)?n:e[t],!1),this.setVal(e,t,n)})}cancel(){L=null}set(e,t,n,r){let o=r.reg.get(e);if(o||(o={},r.reg.set(e,o)),!(t in o)){if(o[t]=n,Array.isArray(e)&&B(t)){const n=[];e.forEach(e=>n.push(e)),r.states.push({obj:e,prop:t,val:n})}else r.states.push({obj:e,prop:t,val:n});return!0}}setVal(e,t,n){if(Array.isArray(e)){const r=e;B(t)?(r.splice(0,e.length),n.forEach(t=>{e.push(t)})):t.match(/^\\d+$/)&&void 0===n?e.splice(parseInt(t),1):"length"!==t&&(e[t]=n)}else e[t]=n;this.listener&&this.listener(e,t,n)}}function B(e){return e.match($)}class W extends Error{}const K=new WeakMap,z=new WeakMap,q=Object(f.a)();function V(e,t=e,n,r){let o,i,c;"function"==typeof e&&(e=new e),"object"==typeof n&&(n.to||(o=n.expectTo),Array.isArray(n.ignore)&&(i=n.ignore),"function"==typeof n.watch&&(c=n.watch));const u=[];function s(e,t,n,r,o){c&&c(t,r,o);let i=e;do{const{source:e}=i,c=z.get(e);c&&c.forEach(({on:i,exe:c,node:f,target:u})=>{f.invalid||e!==X(u)||t.match(new RegExp(`.${i}$`))&&q.push(c,n,r,o)})}while(i=i.parent)}return function e(n,c,a=""){if(J(n))return n;if("object"==typeof n&&"_isVue"in n)return n;const l={},p={get(e,t,n){let r;if("function"==typeof t)[e]in l?r=l[e]:l[e]=r=n();else{if(J(t))return t;r=K.get(t),void 0===r&&K.set(t,r=n())}return r}},d={source:n,proxy:void 0,parent:c},_=j.applyAgent(),h=new Proxy(n,{has:(e,t)=>"__observable__"===t||"__original__"===t||t in e,get(s,l,h){if(s instanceof RegExp)return s[l];if("toString"===l||"toJSON"===l||"valueOf"===l||"$$typeof"===l||"constructor"===l||Object(f.e)(l))return s[l];if("__original__"===l)return"__original__"in s?s.__original__:s;if("__isExpectTo__"===l)return o;if("__pushWatch__"===l)return e=>{let t=z.get(n);t||z.set(n,t=new Set),t.has(e)||t.add(e)};if("__pushJoinFrom__"===l)return(e,t)=>{t.forEach(([t,n])=>{const r=t.split("."),o=n.split(".");let i,c=e,f=h;r.forEach((e,t)=>{c=c[e],t===r.length-1&&(i="object"==typeof c&&c?k(c):c)}),o.forEach((e,t)=>{if(t===o.length-1)f[e]=i;else if(f=f[e],!f)return!1})})};if("__pushJoinTo__"===l)return(e,t)=>{u.push({to:e,mapping:t})};const b=a+(l.match(/^\\d+$/)?`[${l}]`:"."+l);let y;const g=Object(f.d)(s,l);if(y=g&&g.get?g.get.call(h):s[l],void 0===y&&o&&""===a)return(...e)=>{if(r)return function(e,t,n,r){if("parents"===n.direction){let o,i=n.node.parent;for(;i&&(!i.observerAry||!i.observerAry.find(n=>{if(n.type===e&&"children"===n.direction){try{o=n.proxy[t]}catch(e){if(!(e instanceof W))throw e}if(void 0!==o)return!0}}));)i=i.parent;if("function"==typeof o)return o(...r);throw new Error(`No implements found for(${t})`)}if("children"===n.direction){const o=[],i=n=>{n&&n.length>0&&n.forEach(n=>{n.observerAry&&n.observerAry.find(n=>{if(n.type===e){let e;try{e=n.proxy[t]}catch(e){if(!(e instanceof W))throw e}if(void 0!==e)return o.push(e),!0}})||i(n.children)})},c=n.node.children;if(i(c),o.length>0){let e=[];return o.forEach(t=>{e.push(t(...r))}),1==e.length?e[0]:e}throw new Error(`No implements found for(${t})`)}}(t,l,r(),e)};if("function"==typeof y){let e;return e=Array.isArray(s)?/^(splice)$/gi.test(l)?p.get(l,y,()=>(...e)=>{var t;if(L){const n=null===(t=a.match(/\\.([^\\.]+)$/))||void 0===t?void 0:t[1];let r=c.source[A.a];if(!(r&&r[n])){let t;return L.setUndo(h,"before@splice",s),L.sleep(()=>{t=y.call(h,...e)}),t}return y.call(h,...e)}return y.call(h,...e)}):/^(indexOf)$/gi.test(l)?(...e)=>{const t=e.map(e=>X(e)),n=s.map(e=>X(e));return y.call(n,...t)}:y:p.get(l,y,()=>(...e)=>{try{return s instanceof Date||s instanceof Set||s instanceof Map?s[l].call(s,...e):s[l].call(h,...e)}catch(e){throw e}}),e}return _.push(b,l),i&&-1!==i.indexOf(l)?y:"object"==typeof y&&y&&!(y instanceof HTMLElement||y instanceof SVGElement||y instanceof RegExp||y.$$typeof)?p.get(l,y,()=>e(y,d,b)):y},set(e,t,n,r){var o;if("__proto__"===t)return e[t]=n,!0;const i=e[t];if(i!==n||Array.isArray(e)&&t&&"length"===t){const c=a+"."+t;if(L){let n=e[A.a];!(n&&n[t])&&L.setUndo(r,t,i)}const l=Object(f.d)(e,t);if(l&&l.set?l.set.call(r,n):e[t]=n,s(d,c,t,n,i),_.update(c,t,n),u.length>0&&u.find(({to:e,mapping:t})=>{if(!t.find(([t,r])=>{if("."+t===c){const t=r.split(".");let o=e;return t.forEach((e,r)=>{const i=t[r];r===t.length-1?o[i]=n:o=o[i]}),!0}})){const t=c.replace(/^\\./,"").split(".");let r=e;t.forEach((e,o)=>{if("object"!=typeof r||!r)return!1;{const e=t[o];o===t.length-1?r[e]=n:r=r[e]}})}}),Array.isArray(e)&&t.match(/^(\\d+)|length$/)){const t=null===(o=a.match(/\\.([^\\.]+)$/))||void 0===o?void 0:o[1];s(d,a,t,e,e)}}return!0}});return d.proxy=h,h}(e,null)}function X(e){return"object"==typeof e&&e&&e.__original__||e}function J(e){return"object"==typeof e&&e&&["__observable__"]in e}function Y(e){J(e.target)&&e.target.__pushWatch__(e)}function H(e,t,n,o,i){const c=[...arguments];n=c.find(e=>"object"==typeof e?e:void 0);const f=Object(r.useRef)(null);let u=!f.current;if(u){if(arguments.length<1)throw new Error("invalid arguments,expect <T>(class:new ()=>T|T).");if("object"!=typeof e&&"function"!=typeof e||!e)throw new Error("invalid arguments,expect <T>(class:new ()=>T|T).");let r;r="function"==typeof e?new e:e;let o=null;const i=V(r,e,n,()=>o);if("function"==typeof t&&t(e=>{if(e&&"object"==typeof e)return G(e,i),!0}),"object"==typeof n){if(n.to){const t=Q(e,i,n.to);t&&(o=t)}else if(n.expectTo){const t=Q(e,i,n.expectTo);t&&(o=t)}"function"==typeof n.init&&n.init(X(i))}Q(e,i,"self");const u=c.find(e=>"string"==typeof e?e:void 0);u&&U(u,i,e),f.current=i}i=c.find(e=>Array.isArray(e))||[];const s=[...i],a=Object(r.useCallback)(()=>{if(i&&!u){const r=f.current;if("function"!=typeof e)for(let t in e){const n=e[t];r[t]=n}else"function"==typeof t&&t(e=>{if(e&&"object"==typeof e){for(let t in e)r[t]=e[t];return!0}});"function"==typeof(null==n?void 0:n.init)&&n.init(X(r))}},s);return Object(r.useMemo)(a,s),f.current}function G(e,t){const n=Object.getOwnPropertyNames(e);n&&n.forEach(n=>{const r=e[n];"function"==typeof r?"constructor"!==n&&(t[n]=r):t[n]=r});const r=Object.getPrototypeOf(e);r&&r!==Object.prototype&&G(r,t)}function Q(e,t,n){if("string"!=typeof n||!/^(children|parents|self)$/gi.test(n))throw new Error("direction = \'children\'|\'parents\' expect.");const r=new Proxy({},{get(e,n){let r=t[n];return"function"==typeof r?(...e)=>r(...e):r},set:(e,n,r)=>(t[n]=r,!0)}),o=j.regListener("subject",{type:e,direction:n,proxy:r});if(o&&"self"!==n)return{direction:n,node:o}}function Z(e){const[,t]=Object(r.useState)(),n=j.getCurUpdater(),o=Object(r.useMemo)(()=>({c:0,fn:e,updater:{_from_:"useComputed",component:n.component,hoc:e,fiber:s.current,update:function(){t(o.c++)}}}),[]);return Object(r.useMemo)(()=>{const t=o.updater;let r;j.setCurUpdater(t);try{r=e()}catch(e){if(!t.fiber||!t.fiber.props)throw e;!function e(t,n,r){if(!n||"function"!=typeof n._onError_&&"function"!=typeof n._onerror_){const o=n._parent_info_;if(o){const n=j.searchNode(o);if(n.props)return e(t,n.props,r)}throw r}return(n._onError_||n._onerror_)(r,t)}("render",t.fiber.props,e)}finally{j.setCurUpdater(n)}return r},[o.c])}function ee(e,t,n){Object(r.useMemo)(()=>{const r="useWatcher(target:Observable,on:string,callback:(prop: string, value: any, preValue?: any) => void).";if(!J(e))return;if("string"!=typeof t)throw new Error(r);if("function"!=typeof n)throw new Error(r);const o=j.regListener("observer");Y({target:e,on:t,exe:n,node:o})},[])}function te(e,t){const n=Object(r.useRef)();return Object(r.useMemo)(()=>(n.current||(n.current=e()),n.current),t)}function ne(e,t,n,o){const i=[...arguments];let c;if(n=i.find(e=>"object"==typeof e),o=i.find(e=>Array.isArray(e)),n&&(n.from||(null==n?void 0:n.expectTo)))c=Object(r.useRef)();else if(c={},o)throw new Error("Updater can not be used here.");let f=!c.current;if(void 0===c||!c.current){if(arguments.length<0)throw new Error("invalid arguments,expect <T>(class:new ()=>T).");if("function"!=typeof e||!e)throw new Error("invalid arguments,expect <T>(class:new ()=>T).");const r={watcherPushed:{}};if("function"==typeof t){const e=t(e=>{if(e&&"object"==typeof e)return r.implVal=e,!0});"object"==typeof e&&(r.implVal=e)}function u(t,r){let o;try{o=re("observer",e,n.expectTo,i,t)}catch(e){if(!r)throw e;o=[]}if(!Array.isArray(o)){if("function"!=typeof o)throw new Error("ExpectTo\'s value must be a Function type.");o=[o]}return(...e)=>{r&&o.push(r);let t=[];return o.forEach(n=>{t.push(n(...e))}),1==t.length?t[0]:t}}const o=new Proxy({},{get(t,o){if("toString"===o||"valueOf"===o||"$$typeof"===o||"constructor"===o||o===Symbol.toPrimitive||o===Symbol.toStringTag||o===Symbol.iterator)return t[o];if(r.implVal){let e=r.implVal[o];if(void 0!==e){if(null==n?void 0:n.expectTo){if("function"!=typeof e)throw new Error("ExpectTo\'s value must be a Function type.");return u(o,e)}return e}}if(null==n?void 0:n.expectTo)return u(o);if(null==n?void 0:n.from){const t=re("subject",e,null==n?void 0:n.from,i,o);let c;if(!r.watcherPushed[o]&&J(t)&&"object"==typeof n.watch&&(c=n.watch)){r.watcherPushed[o]=!0;const e=new RegExp(`^${o}.(.+)$`);c.on.match(e)&&Y({target:t,on:c.on.replace(e,"$1"),exe:c.exe,node:i})}if(!r.implVal)return t}else{const t=j.curRT.getNode();if(t&&t.subjectAry){let n;return t.subjectAry.find(t=>{if("self"===t.direction&&t.type===e)return n=t.proxy[o],!0}),n}}},set(t,r,o){let c=i,f=null==n?void 0:n.from;return f||(f="self",c=j.curRT.getNode()),c&&oe("subject",e,f,c,r,o),!0}});let i;n&&n.from&&(i=j.regListener("observer",{type:e,direction:n.from,proxy:o}),j.regListener("subject",{type:e,direction:"self",proxy:o})),r.proxy=o,c.current=r}if(o){const e=[...o],n=Object(r.useCallback)(()=>{if(o&&!f){const e=c.current.implVal;"function"==typeof t&&t(t=>{if(t&&"object"==typeof t){for(let n in t)e[n]=t[n];return!0}})}},e);Object(r.useEffect)(n,e)}return c.current.proxy}function re(e,t,n,r,o){if(e+="Ary","parents"===n){let i,c=r.parent;for(;c&&(!c[e]||!c[e].find(e=>{if(e.direction!==n&&"self"!==e.direction&&e.type===t)return i=e.proxy,!0}));)c=c.parent;if(void 0!==i)return i[o]}else if("children"===n){const i=[],c=r=>{r&&r.length>0&&r.forEach(r=>{r[e]&&r[e].find(e=>{if(e.direction!==n&&"self"!==e.direction&&e.type===t){let t;try{t=e.proxy[o]}catch(e){if(!(e instanceof W))throw e}if(void 0!==t)return i.push(t),!0}})||c(r.children)})},f=r.children;if(c(f),i.length>0)return i;throw new Error(`No implements found for(${o})`)}}function oe(e,t,n,r,o,i){if(e+="Ary","parents"===n){let n=r.parent;for(;n&&(!n[e]||!n[e].find(e=>{if(e.type===t)return e.proxy[o]=i}));)n=n.parent}else if("children"===n){const n=r=>{r&&r.length>0&&r.forEach(r=>{r[e]&&r[e].find(e=>{if(e.type===t)return e.proxy[o]=i,!0})||n(r.children)})},c=r.children;n(c)}else"self"===n&&r.subjectAry&&r.subjectAry.find(e=>{if("self"===e.direction&&e.type===t)return e.proxy[o]=i,!0})}function ie(e,t){if(!J(e))throw new Error("The join to object must be an observable object.");if(J(n=e)&&n.__isExpectTo__)throw new Error("The observable object has expectTo,join is not allowed.");var n;return{joinTo(n,r){if("object"==typeof n){if(!J(n))throw new Error("The join from object must be an observable object.");if((null==t?void 0:t.length)!==(null==r?void 0:r.length))throw new Error("The mapping props(in from and to) must be a same length.");let o=[];if((null==t?void 0:t.length)>0)null==t||t.forEach((e,t)=>{o.push([e,r[t]])});else{Object(f.c)(e).forEach(e=>{o.push([e,e])})}!function(e,t,n){e.__pushJoinTo__(t,n)}(e,n,o),function(e,t,n){e.__pushJoinFrom__(t,n)}(n,e,o)}}}}let ce;const fe={push(e){ue.push(e),this.handler.size+=1},handler:V({name:"Undo",size:(ue=[{}]).length,exe(){if(ue.length<=1)return;const e=ue.pop();e.undo(),fe.handler.size-=1,se.push(e)}})};var ue;const se=(e=>({push(t){e.push(t),this.handler.size+=1},handler:V({name:"Redo",size:e.length,exe(){if(e.length<=1)return;const t=e.pop();t.redo(),se.handler.size-=1,fe.push(t)}})}))([{}]),ae=fe.handler,le=se.handler;let pe;function de(e){setTimeout(e=>{if(pe){const e=pe.until-((new Date).getTime()-pe.from);e<=0?(fe.push(pe.dump),pe=void 0):de(e)}},e)}function _e(e,t){if(pe)if(ce!==e)fe.push(pe.dump),pe=void 0,ce=void 0;else{if(!(pe.until>0&&(new Date).getTime()-pe.from>pe.until))return{on(e){},wait(){},commit(e){if(pe.until<0)e&&e.wait?(pe.from=(new Date).getTime(),de(pe.until)):(fe.push(pe.dump),pe=void 0);else{let t=pe.until-((new Date).getTime()-pe.from);if(t<=0)return fe.push(pe.dump),void(pe=void 0);e&&e.wait&&(pe.from=(new Date).getTime(),t=pe.until),de(t)}},cancel(){ce=void 0,n.undo()}};fe.push(pe.dump),pe=void 0}ce=e;let n=function(e){return L=new F(e),L}(t);return{on(e){},wait(){if(!pe){const e=n.dump();pe={from:(new Date).getTime(),until:-1,dump:e}}},commit(e){const t=n.dump();e&&e.wait?pe={from:(new Date).getTime(),until:e.wait,dump:t}:(ce=void 0,fe.push(t))},cancel(){ce=void 0,n.undo()}}}const he=function(e,t,n){const r=e.currentTarget,o=r.offsetWidth,i=r.offsetHeight,c=3==arguments.length&&n&&n.relDom,f=(3==arguments.length&&n&&n.zoom,be(r,c)),u=c?be(c):{x:0,y:0};let s,a,l,p,d,_=e.pageX-f.x,h=e.pageY-f.y;if(!t)return f;{j.curRT.setInfoIdForDelay();const e=e=>{let n=e.pageX-_-s||0,c=e.pageY-h-a||0;s=e.pageX-_,a=e.pageY-h,l=e.pageX-u.x,p=e.pageY-u.y,0==n&&0==c||(d=d?"moving":"start",t({po:{x:s,y:a},epo:{ex:l,ey:p},dpo:{dx:n,dy:c},targetStyle:{x:f.x,y:f.y,w:o,h:i}},d,r))};let n=!1;document.onmousemove=t=>{n||(n=!0,he.event=t),e(t)},document.onmouseup=n=>{setTimeout(()=>he.event=void 0);try{const c=j.applyBatch();e(n),d&&t({po:{x:s,y:a},epo:{ex:l,ey:p},dpo:{dx:0,dy:0},targetStyle:{x:f.x,y:f.y,w:o,h:i}},"finish",r),c.commit()}catch(e){throw e}finally{document.onmousemove=null,document.onmouseup=null,j.curRT.clearDelay()}}}};function be(e,t){if(t){let n=e.getBoundingClientRect(),r=t.getBoundingClientRect();return{x:n.left-r.left,y:n.top-r.top,w:e.offsetWidth,h:e.offsetHeight}}{let t=e.getBoundingClientRect();return{x:t.left,y:t.top,w:e.offsetWidth,h:e.offsetHeight}}}function ye(e){function t(t){e&&e(t)}return t.stop=function(e){e.stopPropagation(),t(e)},t.prevent=function(e){e.preventDefault(),t(e)},t.stop.prevent=function(e){e.preventDefault(),t.stop(e)},t}const ge=j.igonreObservableBefore}])}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n')},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE__4__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL3hnQ29tcGlsZXJXZWIvZXh0ZXJuYWwgXCJyZWFjdC1kb21cIj81ZTlhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fNF9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(7);\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, ".slot-78f44 {\\n  width: 100%;\\n  height: 100% !important;\\n  position: relative !important;\\n}\\n.lyFlexColumn-bc992 {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.lyFlexRow-40836 {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n.justifyContentFlexStart-6e8c3 {\\n  justify-content: flex-start;\\n}\\n.justifyContentFlexCenter-1b2b7 {\\n  justify-content: center;\\n}\\n.justifyContentFlexFlexEnd-bb109 {\\n  justify-content: flex-end;\\n}\\n.justifyContentFlexSpaceAround-bc67b {\\n  justify-content: space-around;\\n}\\n.justifyContentFlexSpaceBetween-2463c {\\n  justify-content: space-between;\\n}\\n.alignItemsFlexStart-297e8 {\\n  align-items: flex-start;\\n}\\n.alignItemsFlexCenter-74c2d {\\n  align-items: center;\\n}\\n.alignItemsFlexFlexEnd-86a8e {\\n  align-items: flex-end;\\n}\\n.debugFocus-417fb {\\n  outline: 1px dashed red;\\n  outline-offset: -3px;\\n}\\n", ""]);\n// Exports\nexports.locals = {\n\t"slot": "slot-78f44",\n\t"lyFlexColumn": "lyFlexColumn-bc992",\n\t"lyFlexRow": "lyFlexRow-40836",\n\t"justifyContentFlexStart": "justifyContentFlexStart-6e8c3",\n\t"justifyContentFlexCenter": "justifyContentFlexCenter-1b2b7",\n\t"justifyContentFlexFlexEnd": "justifyContentFlexFlexEnd-bb109",\n\t"justifyContentFlexSpaceAround": "justifyContentFlexSpaceAround-bc67b",\n\t"justifyContentFlexSpaceBetween": "justifyContentFlexSpaceBetween-2463c",\n\t"alignItemsFlexStart": "alignItemsFlexStart-297e8",\n\t"alignItemsFlexCenter": "alignItemsFlexCenter-74c2d",\n\t"alignItemsFlexFlexEnd": "alignItemsFlexFlexEnd-86a8e",\n\t"debugFocus": "debugFocus-417fb"\n};\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL3hnQ29tcGlsZXJXZWIvLi9zcmMvc2tpbi5sZXNzPzZkNWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5zbG90LTc4ZjQ0IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XFxuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcXG59XFxuLmx5RmxleENvbHVtbi1iYzk5MiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLmx5RmxleFJvdy00MDgzNiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG59XFxuLmp1c3RpZnlDb250ZW50RmxleFN0YXJ0LTZlOGMzIHtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG59XFxuLmp1c3RpZnlDb250ZW50RmxleENlbnRlci0xYjJiNyB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmp1c3RpZnlDb250ZW50RmxleEZsZXhFbmQtYmIxMDkge1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG59XFxuLmp1c3RpZnlDb250ZW50RmxleFNwYWNlQXJvdW5kLWJjNjdiIHtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbn1cXG4uanVzdGlmeUNvbnRlbnRGbGV4U3BhY2VCZXR3ZWVuLTI0NjNjIHtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuLmFsaWduSXRlbXNGbGV4U3RhcnQtMjk3ZTgge1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxufVxcbi5hbGlnbkl0ZW1zRmxleENlbnRlci03NGMyZCB7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4uYWxpZ25JdGVtc0ZsZXhGbGV4RW5kLTg2YThlIHtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG59XFxuLmRlYnVnRm9jdXMtNDE3ZmIge1xcbiAgb3V0bGluZTogMXB4IGRhc2hlZCByZWQ7XFxuICBvdXRsaW5lLW9mZnNldDogLTNweDtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNsb3RcIjogXCJzbG90LTc4ZjQ0XCIsXG5cdFwibHlGbGV4Q29sdW1uXCI6IFwibHlGbGV4Q29sdW1uLWJjOTkyXCIsXG5cdFwibHlGbGV4Um93XCI6IFwibHlGbGV4Um93LTQwODM2XCIsXG5cdFwianVzdGlmeUNvbnRlbnRGbGV4U3RhcnRcIjogXCJqdXN0aWZ5Q29udGVudEZsZXhTdGFydC02ZThjM1wiLFxuXHRcImp1c3RpZnlDb250ZW50RmxleENlbnRlclwiOiBcImp1c3RpZnlDb250ZW50RmxleENlbnRlci0xYjJiN1wiLFxuXHRcImp1c3RpZnlDb250ZW50RmxleEZsZXhFbmRcIjogXCJqdXN0aWZ5Q29udGVudEZsZXhGbGV4RW5kLWJiMTA5XCIsXG5cdFwianVzdGlmeUNvbnRlbnRGbGV4U3BhY2VBcm91bmRcIjogXCJqdXN0aWZ5Q29udGVudEZsZXhTcGFjZUFyb3VuZC1iYzY3YlwiLFxuXHRcImp1c3RpZnlDb250ZW50RmxleFNwYWNlQmV0d2VlblwiOiBcImp1c3RpZnlDb250ZW50RmxleFNwYWNlQmV0d2Vlbi0yNDYzY1wiLFxuXHRcImFsaWduSXRlbXNGbGV4U3RhcnRcIjogXCJhbGlnbkl0ZW1zRmxleFN0YXJ0LTI5N2U4XCIsXG5cdFwiYWxpZ25JdGVtc0ZsZXhDZW50ZXJcIjogXCJhbGlnbkl0ZW1zRmxleENlbnRlci03NGMyZFwiLFxuXHRcImFsaWduSXRlbXNGbGV4RmxleEVuZFwiOiBcImFsaWduSXRlbXNGbGV4RmxleEVuZC04NmE4ZVwiLFxuXHRcImRlYnVnRm9jdXNcIjogXCJkZWJ1Z0ZvY3VzLTQxN2ZiXCJcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || \'\').concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL3hnQ29tcGlsZXJXZWIvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG5cbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgJycpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gIHJldHVybiBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"parse\", function() { return /* reexport */ parse; });\n__webpack_require__.d(__webpack_exports__, \"RenderReact\", function() { return /* reexport */ RenderReact; });\n\n// EXTERNAL MODULE: ./node_modules/@mybricks/compiler-js/dist/index.js\nvar dist = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/constants.ts\nconst KEY_STAGEVIEW = `xg.desn.stageview`;\n//export const KEY_STAGEVIEW = `xg.desn.mpa.stageview`//MPA TODO\n\n// CONCATENATED MODULE: ./src/parse.ts\n\n\nlet allRefs, refLoaded, translatedMap;\nfunction parse(pageContent) {\n    translatedMap = new WeakMap();\n    refLoaded = {};\n    const stageView = pageContent[KEY_STAGEVIEW];\n    const { def, refs } = stageView;\n    allRefs = refs;\n    const requireComs = [];\n    const model = getRef(def['_ref_']);\n    const mainModule = model['mainModule'];\n    if (mainModule.frame) {\n        function parseFrame(frame) {\n            if (frame.comAry) {\n                frame.comAry.forEach(com => {\n                    if (Object(dist[\"isTypeof\"])(com, dist[\"E_ItemType\"].NODE)) {\n                        const { runtime } = com;\n                        const key = runtime.def.namespace + '@' + runtime.def.version;\n                        if (requireComs.indexOf(key) <= 0) {\n                            requireComs.push(key);\n                        }\n                        if (com.frames) {\n                            com.frames.forEach(fr => parseFrame(fr));\n                        }\n                    }\n                });\n            }\n        }\n        parseFrame(mainModule.frame);\n    }\n    const rtn = { mainModule, requireComs };\n    allRefs = void 0;\n    refLoaded = void 0;\n    translatedMap = void 0;\n    return rtn;\n}\nfunction getRef(ref) {\n    let model = refLoaded[ref];\n    if (model) {\n        return model;\n    }\n    //debugger\n    refLoaded[ref] = model = allRefs[ref];\n    translate(model);\n    return model;\n}\nfunction translate(obj) {\n    if (obj && translatedMap.has(obj)) {\n        return translatedMap.get(obj);\n    }\n    if (typeof obj === 'object' && obj) {\n        let rtn;\n        if (obj['_ref_']) {\n            rtn = getRef(obj['_ref_']);\n            translatedMap.set(obj, rtn);\n        }\n        else {\n            translatedMap.set(obj, obj);\n            Object.keys(obj).forEach(nm => {\n                let tv = obj[nm];\n                if (Array.isArray(tv)) {\n                    tv.forEach((item, index) => {\n                        tv[index] = translate(item);\n                    });\n                }\n                else {\n                    obj[nm] = translate(tv);\n                }\n            });\n            rtn = obj;\n        }\n        return rtn;\n    }\n    return obj;\n}\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/@mybricks/rxui/index.js\nvar rxui = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./src/skin.less\nvar skin = __webpack_require__(0);\nvar skin_default = /*#__PURE__*/__webpack_require__.n(skin);\n\n// CONCATENATED MODULE: ./src/RenderReact.tsx\n\n\n\n\nconst RT_MAPS = {};\nalert(2222);\nfunction RenderReact({ mainModule, comDefs, inputParams, output, runtimeCfg, logs }) {\n    const nComDefs = Object.assign({}, comDefs);\n    const { frame, slot } = Object(external_react_[\"useMemo\"])(() => {\n        const { frame, slot } = Object(rxui[\"observable\"])(mainModule);\n        const runner = Object(dist[\"compile\"])(frame, {\n            // envVars,\n            node(node) {\n                return {\n                    render(scopePath, frameLable, frames, curScope) {\n                        const io = Object(dist[\"createIO\"])(node, {\n                            output() {\n                                //igonreObservableBefore()//TODO 待测试\n                            }\n                        });\n                        RT_MAPS[node.runtime.id] = { scopePath, frameLable, frames, io };\n                        const rtDef = node.runtime.def;\n                        const rtType = rtDef.rtType;\n                        if (rtType && rtType.match(/js/gi)) { //逻辑组件\n                            const rtCfg = Object.assign({\n                                get curModule() {\n                                    const module = node.parent.parent;\n                                    if (module) {\n                                        const frame = node.parent;\n                                        const outPins = frame.outputPins;\n                                        const outputs = {};\n                                        outPins.forEach(pin => {\n                                            outputs[pin.id] = (val, callback) => {\n                                                pin._exe(curScope, val, callback);\n                                            };\n                                        });\n                                        return {\n                                            outputs\n                                        };\n                                    }\n                                }\n                            }, runtimeCfg);\n                            const ns = rtDef.namespace + '@' + rtDef.version;\n                            const comRt = nComDefs[ns];\n                            if (comRt && typeof comRt === 'function') {\n                                comRt({\n                                    data: Object(rxui[\"clone\"])(node.runtime.model.data),\n                                    inputs: io.inputs,\n                                    outputs: io.outputs,\n                                    env: { runtime: rtCfg }\n                                });\n                            }\n                            else {\n                                throw new Error(`未找到组件(${ns})`);\n                            }\n                        }\n                        return io;\n                    }\n                };\n            }, pin(pin) {\n                const comRT = pin.parent.runtime ? pin.parent.runtime : void 0;\n                return {\n                    exe(value) {\n                        if (pin.type.match(/^ext$/gi)) {\n                            if (pin.direction.match(/^input|inner-output$/gi)) {\n                                if (pin.hostId === 'show') {\n                                    pin.parent.runtime.model.style.display = 'block';\n                                }\n                                else if (pin.hostId === 'hide') {\n                                    pin.parent.runtime.model.style.display = 'none';\n                                }\n                            }\n                        }\n                        const strVal = typeof value === 'object' && value ?\n                            JSON.stringify(value) :\n                            String(value);\n                        if (comRT) {\n                            if (logs) {\n                                if (typeof logs.info === 'function') {\n                                    setTimeout(v => {\n                                        logs.info({\n                                            catelog: '程序运行',\n                                            content: `${comRT.title} | ${pin.title} ${pin.direction == 'input' || pin.direction == 'inner-input' ? '传入' : '传出'} ${strVal}`,\n                                            focus() {\n                                                comRT._focus = true;\n                                            },\n                                            blur() {\n                                                comRT._focus = void 0;\n                                            }\n                                        });\n                                    });\n                                }\n                            }\n                        }\n                    }\n                };\n            }\n        });\n        runner.run()(inputParams ? { params: inputParams } : void 0);\n        return { frame, slot };\n    }, []);\n    const jsx = [];\n    slot.comAry.forEach((node) => {\n        jsx.push(React.createElement(RenderCom, { key: node.runtime.id, node: node, comDefs: nComDefs, runtimeCfg: runtimeCfg }));\n    });\n    return jsx;\n}\nfunction RenderCom({ node, comDefs, runtimeCfg }) {\n    const { slots: comSlots, runtime } = node;\n    const rtType = runtime.def.rtType;\n    if (rtType && rtType.match(/js/gi)) { //逻辑组件\n        return;\n    }\n    const nodeModel = runtime.model;\n    const comRuntime = comDefs[runtime.def.namespace + '@' + runtime.def.version];\n    const rt = RT_MAPS[runtime.id];\n    //\n    // if (!comRuntime) {\n    //   debugger\n    //   return\n    // }\n    //if (comRuntime) {\n    const io = rt.io; //inputs outpus\n    const slots = {};\n    if (comSlots) {\n        comSlots.forEach(slot => {\n            slots[slot.id] = {\n                id: slot.id,\n                title: slot.title,\n                //comAry:slot.comAry,\n                render() {\n                    const { frames } = RT_MAPS[runtime.id];\n                    const fn = frames[slot.id];\n                    if (typeof fn === 'function') {\n                        fn(); //兼容之前的非框图\n                    }\n                    const comAry = slot.comAry;\n                    return (React.createElement(\"section\", { className: calSlotStyle(slot) }, comAry.map(com => {\n                        return (React.createElement(RenderCom, { key: com.runtime.id, node: com, comDefs: comDefs, runtimeCfg: runtimeCfg }));\n                    })));\n                }\n            };\n        });\n    }\n    const style = nodeModel.style;\n    return (React.createElement(\"div\", { id: node.runtime.id, style: {\n            width: style.width || '100%',\n            display: style.display,\n            paddingTop: style.marginTop + 'px',\n            paddingBottom: style.marginBottom + 'px',\n            paddingLeft: style.marginLeft + 'px',\n            paddingRight: style.marginRight + 'px',\n        }, className: `${node.runtime._focus ? skin_default.a.debugFocus : ''}` }, comRuntime({\n        slots: slots,\n        env: { runtime: runtimeCfg },\n        data: nodeModel.data,\n        style,\n        inputs: io.inputs,\n        outputs: io.outputs,\n    })));\n    //}\n}\nfunction calSlotStyle(model) {\n    var _a, _b;\n    const rtn = [skin_default.a.slot];\n    const style = model.style;\n    if (style) {\n        if (((_a = style.layout) === null || _a === void 0 ? void 0 : _a.toLowerCase()) == 'flex-column') {\n            rtn.push(skin_default.a.lyFlexColumn);\n        }\n        else if (((_b = style.layout) === null || _b === void 0 ? void 0 : _b.toLowerCase()) == 'flex-row') {\n            rtn.push(skin_default.a.lyFlexRow);\n        }\n        const justifyContent = style.justifyContent;\n        if (justifyContent) {\n            if (justifyContent.toUpperCase() === 'FLEX-START') {\n                rtn.push(skin_default.a.justifyContentFlexStart);\n            }\n            else if (justifyContent.toUpperCase() === 'CENTER') {\n                rtn.push(skin_default.a.justifyContentFlexCenter);\n            }\n            else if (justifyContent.toUpperCase() === 'FLEX-END') {\n                rtn.push(skin_default.a.justifyContentFlexFlexEnd);\n            }\n            else if (justifyContent.toUpperCase() === 'SPACE-AROUND') {\n                rtn.push(skin_default.a.justifyContentFlexSpaceAround);\n            }\n            else if (justifyContent.toUpperCase() === 'SPACE-BETWEEN') {\n                rtn.push(skin_default.a.justifyContentFlexSpaceBetween);\n            }\n        }\n        const alignItems = style.alignItems;\n        if (alignItems) {\n            if (alignItems.toUpperCase() === 'FLEX-START') {\n                rtn.push(skin_default.a.alignItemsFlexStart);\n            }\n            else if (alignItems.toUpperCase() === 'CENTER') {\n                rtn.push(skin_default.a.alignItemsFlexCenter);\n            }\n            else if (alignItems.toUpperCase() === 'FLEX-END') {\n                rtn.push(skin_default.a.alignItemsFlexFlexEnd);\n            }\n        }\n    }\n    return rtn.join(' ');\n}\n\n// CONCATENATED MODULE: ./index.ts\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n")}])}));